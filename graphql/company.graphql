type Company {
    id: ID!
    name: String!
    email: String! @rules(apply: ["email"])
    address: String!
    phone: String
    vat: String!
    type: String
    country: Country! @belongsTo
    language: Language! @belongsTo
    users: [User!] @belongsToMany
    chapters: [Chapter!] @hasMany
}

extend type Query {
    companies: [Company!] @all
    company(id: ID @eq): Company @find
}
extend type Mutation {
    createCompany(input: CreateCompanyInput!): Company
        @create
        @middleware(checks: ["auth:api"])
        @can(ability: "create")
}
input CreateCompanyInput {
    name: String!
    email: String! @rules(apply: ["email"])
    address: String
    phone: String
    vat: String
    type: String
    country_id: Int
    language_id: Int
    user: Int
}
